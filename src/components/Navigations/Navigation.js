import React, { useEffect, useState, useContext } from "react";
import styled from "styled-components";
import { Link } from "react-router-dom";
import api from "../../axios";
import AppContext from "../../contexts/appContext";
import Logo from "../Logo";
import {
    StyledTopNav,
    StyledSideNav,
    StyledCloseSideNavBtn,
} from "./Navigation.styles";
import Button from "../Button";

const CartButton = styled(Link)``;

export const TopNav = () => (
    <StyledTopNav>
        <Logo />
        <CartButton to="/cart">
            <svg
                width="28"
                height="27"
                viewBox="0 0 28 27"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
            >
                <path
                    d="M26.0001 18.8333H7.33342C6.97979 18.8333 6.64065 18.6928 6.39061 18.4428C6.14056 18.1927 6.00008 17.8536 6.00008 17.5C6.00008 17.1463 6.14056 16.8072 6.39061 16.5572C6.64065 16.3071 6.97979 16.1666 7.33342 16.1666H21.2534C22.145 16.1667 23.011 15.8689 23.7139 15.3205C24.4169 14.7722 24.9165 14.0047 25.1334 13.14L27.3334 4.48663C27.3834 4.28984 27.3877 4.08424 27.3461 3.88552C27.3045 3.6868 27.2181 3.5002 27.0934 3.33996C26.9637 3.1756 26.7972 3.04409 26.6073 2.95607C26.4173 2.86804 26.2093 2.82598 26.0001 2.83329H7.01342C6.73833 2.05523 6.22932 1.38129 5.55617 0.903877C4.88302 0.426464 4.07867 0.168945 3.25341 0.166626H2.00008C1.64646 0.166626 1.30732 0.307102 1.05727 0.55715C0.807224 0.807199 0.666748 1.14634 0.666748 1.49996C0.666748 1.85358 0.807224 2.19272 1.05727 2.44277C1.30732 2.69282 1.64646 2.83329 2.00008 2.83329H3.25341C3.55799 2.82442 3.85642 2.92014 4.09902 3.10451C4.34162 3.28888 4.51375 3.55079 4.58675 3.84663L4.66675 4.48663L6.97341 13.5C5.91255 13.5477 4.9141 14.0149 4.19771 14.7988C3.48132 15.5827 3.10568 16.6191 3.15341 17.68C3.20115 18.7408 3.66836 19.7393 4.45227 20.4557C5.23617 21.1721 6.27255 21.5477 7.33342 21.5H7.57341C7.35413 22.1041 7.28366 22.7523 7.36799 23.3894C7.45231 24.0266 7.68894 24.6341 8.05784 25.1604C8.42674 25.6868 8.91704 26.1165 9.48722 26.4131C10.0574 26.7098 10.6907 26.8647 11.3334 26.8647C11.9762 26.8647 12.6094 26.7098 13.1796 26.4131C13.7498 26.1165 14.2401 25.6868 14.609 25.1604C14.9779 24.6341 15.2145 24.0266 15.2988 23.3894C15.3832 22.7523 15.3127 22.1041 15.0934 21.5H18.2401C18.0208 22.1041 17.9503 22.7523 18.0347 23.3894C18.119 24.0266 18.3556 24.6341 18.7245 25.1604C19.0934 25.6868 19.5837 26.1165 20.1539 26.4131C20.7241 26.7098 21.3573 26.8647 22.0001 26.8647C22.6428 26.8647 23.2761 26.7098 23.8463 26.4131C24.4165 26.1165 24.9068 25.6868 25.2757 25.1604C25.6446 24.6341 25.8812 24.0266 25.9655 23.3894C26.0498 22.7523 25.9794 22.1041 25.7601 21.5H26.0001C26.3537 21.5 26.6928 21.3595 26.9429 21.1094C27.1929 20.8594 27.3334 20.5202 27.3334 20.1666C27.3334 19.813 27.1929 19.4739 26.9429 19.2238C26.6928 18.9738 26.3537 18.8333 26.0001 18.8333ZM24.2934 5.49996L22.5467 12.4866C22.4737 12.7825 22.3016 13.0444 22.059 13.2287C21.8164 13.4131 21.518 13.5088 21.2134 13.5H9.70675L7.70675 5.49996H24.2934ZM11.3334 24.1666C11.0697 24.1666 10.8119 24.0884 10.5927 23.9419C10.3734 23.7954 10.2025 23.5872 10.1016 23.3435C10.0007 23.0999 9.97425 22.8318 10.0257 22.5732C10.0771 22.3145 10.2041 22.077 10.3906 21.8905C10.5771 21.704 10.8147 21.577 11.0733 21.5256C11.3319 21.4741 11.6 21.5005 11.8437 21.6015C12.0873 21.7024 12.2955 21.8733 12.442 22.0925C12.5885 22.3118 12.6667 22.5696 12.6667 22.8333C12.6667 23.1869 12.5263 23.5261 12.2762 23.7761C12.0262 24.0262 11.687 24.1666 11.3334 24.1666ZM22.0001 24.1666C21.7364 24.1666 21.4786 24.0884 21.2593 23.9419C21.0401 23.7954 20.8692 23.5872 20.7682 23.3435C20.6673 23.0999 20.6409 22.8318 20.6924 22.5732C20.7438 22.3145 20.8708 22.077 21.0573 21.8905C21.2437 21.704 21.4813 21.577 21.74 21.5256C21.9986 21.4741 22.2667 21.5005 22.5103 21.6015C22.754 21.7024 22.9622 21.8733 23.1087 22.0925C23.2552 22.3118 23.3334 22.5696 23.3334 22.8333C23.3334 23.1869 23.1929 23.5261 22.9429 23.7761C22.6928 24.0262 22.3537 24.1666 22.0001 24.1666Z"
                    fill="#D37E6A"
                />
            </svg>
        </CartButton>
    </StyledTopNav>
);

const CloseSideNavBtn = () => {
    const { setShowSideNav } = useContext(AppContext);
    return (
        <StyledCloseSideNavBtn
            onClick={() => {
                setShowSideNav(false);
            }}
        >
            <svg
                width="16"
                height="12"
                viewBox="0 0 16 12"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
            >
                <path
                    d="M7.235 0.744243C7.10331 0.611461 6.94662 0.506069 6.77399 0.434147C6.60135 0.362225 6.41619 0.325195 6.22917 0.325195C6.04215 0.325195 5.85699 0.362225 5.68435 0.434147C5.51172 0.506069 5.35504 0.611461 5.22334 0.744243L0.973338 4.99424C0.840556 5.12594 0.735165 5.28263 0.663243 5.45526C0.59132 5.62789 0.554291 5.81306 0.554291 6.00008C0.554291 6.18709 0.59132 6.37226 0.663243 6.54489C0.735165 6.71753 0.840556 6.87421 0.973338 7.00591L5.22334 11.2559C5.35504 11.3887 5.51172 11.4941 5.68435 11.566C5.85699 11.6379 6.04215 11.675 6.22917 11.675C6.41619 11.675 6.60135 11.6379 6.77399 11.566C6.94662 11.4941 7.10331 11.3887 7.235 11.2559C7.36779 11.1242 7.47318 10.9675 7.5451 10.7949C7.61702 10.6223 7.65405 10.4371 7.65405 10.2501C7.65405 10.0631 7.61702 9.87789 7.5451 9.70526C7.47318 9.53262 7.36779 9.37594 7.235 9.24424L3.97667 6.00008L7.235 2.75591C7.36779 2.62421 7.47318 2.46753 7.5451 2.29489C7.61702 2.12226 7.65405 1.93709 7.65405 1.75008C7.65405 1.56306 7.61702 1.37789 7.5451 1.20526C7.47318 1.03263 7.36779 0.87594 7.235 0.744243V0.744243ZM11.7683 6.00008L15.0833 2.75591C15.3501 2.48915 15.5 2.12734 15.5 1.75008C15.5 1.37282 15.3501 1.01101 15.0833 0.744243C14.8166 0.477479 14.4548 0.327613 14.0775 0.327613C13.7002 0.327613 13.3384 0.477479 13.0717 0.744243L8.82167 4.99424C8.68889 5.12594 8.5835 5.28263 8.51158 5.45526C8.43965 5.62789 8.40262 5.81306 8.40262 6.00008C8.40262 6.18709 8.43965 6.37226 8.51158 6.54489C8.5835 6.71753 8.68889 6.87421 8.82167 7.00591L13.0717 11.2559C13.2034 11.3887 13.3601 11.4941 13.5327 11.566C13.7053 11.6379 13.8905 11.675 14.0775 11.675C14.2645 11.675 14.4497 11.6379 14.6223 11.566C14.795 11.4941 14.9516 11.3887 15.0833 11.2559C15.2161 11.1242 15.3215 10.9675 15.3934 10.7949C15.4654 10.6223 15.5024 10.4371 15.5024 10.2501C15.5024 10.0631 15.4654 9.87789 15.3934 9.70526C15.3215 9.53262 15.2161 9.37594 15.0833 9.24424L11.7683 6.00008Z"
                    fill="#D37E6A"
                />
            </svg>
        </StyledCloseSideNavBtn>
    );
};

export const SideNav = () => {
    const [categories, setCategories] = useState([]);
    const { setCategory } = useContext(AppContext);
    const { showSideNav } = useContext(AppContext);
    useEffect(() => {
        const fetchCategories = async () => {
            try {
                const cats = [];
                const response = await api.get("/categories");
                if (response && response.data) {
                    response.data.map((product) => cats.push(product.category));
                    const categories = [...new Set(cats)];
                    setCategories(categories);
                }
            } catch (err) {
                console.log(err);
            }
        };

        fetchCategories();
    }, []);
    return (
        <div
            className={showSideNav ? "modal-container" : null}
            style={
                !showSideNav && window.innerWidth <= 945
                    ? { display: "none" }
                    : { gridColumn: "1/2", gridRow: "2/3" }
            }
        >
            <StyledSideNav className={showSideNav ? "show-modal" : null}>
                {window.innerWidth <= 945 ? <CloseSideNavBtn /> : null}
                <Button
                    variant="link"
                    onClick={() => {
                        setCategory("");
                    }}
                >
                    All
                </Button>
                {categories.map((category) => (
                    <Button
                        variant="link"
                        onClick={() => {
                            setCategory(category);
                        }}
                        key={category}
                    >
                        {category}
                    </Button>
                ))}
            </StyledSideNav>
        </div>
    );
};
